GAMS 47.6.0  c2de9d6d Sep 12, 2024          WEX-WEI x86 64bit/MS Windows - 10/21/24 21:18:41 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


      CEE 6410
      Homework 5
       
      Matthew Fugal
      fugalmatt@gmail.com
      October 8, 2024
   9   
  10  SETS
  11      t /1*2/
  12      src /low, high, pump/;
  13   
  14  PARAMETERS
  15      inflow(t)
  16           /1 600, 2 200/
  17      groundwater(t)
  18          /1 364, 2 364/
  19      irr_profit(t)
  20           /1 300, 2 100/
  21      CapCost(src) capital cost ($ to build)
  22           /low 6000, high 10000, pump 8000/
  23     maxcapacity(src) Maximum capacity of source when built (ac-ft per year)
  24            /low 300, high 700, pump 400.4/
  25     reservoircapacity(src)
  26            /low 300, high 700, pump 0/;
  27   
  28  VARIABLES
  29      storage(t)
  30      reservoir_use(t)
  31      reservoir_release(t)
  32      pump_use(t)
  33      total_profit
  34      I(src) binary decision to build or do prject from source src (1=yes 0=no)
  35      TCOST  total capital and operating costs of supply actions ($);
  36   
  37  Scalar
  38      initial_storage /0/;
  39   
  40  POSITIVE VARIABLES storage, reservoir_use, reservoir_release, pump_use;
  41   
  42  Binary Variable I;
  43   
  44  EQUATIONS
  45      damlimit
  46      water_balance(t)
  47      reservoir_capacity(t)
  48      pump_capacity(t)
  49      pump_limit(t)
  50      profit;
  51   
  52  damlimit..
  53      I("low")+I("high") =L= 1;
  54   
  55  water_balance(t)..
  56      storage(t) =E= storage(t-1)$(ord(t) > 1) + inflow(t) - reservoir_use(t) - reservoir_release(t) + initial_storage$(ord(t)=1);
  57   
  58  reservoir_capacity(t)..
  59      storage(t) + reservoir_use(t) + reservoir_release(t) =L= sum(src, reservoircapacity(src) * I(src));
  60   
  61  pump_capacity(t)..
  62      pump_use(t) =L= maxcapacity("pump") * I("pump");
  63   
  64  pump_limit(t)..
  65      pump_use(t) =L= reservoir_release(t) + groundwater(t);
  66   
  67  profit..
  68      total_profit =E= SUM(t, reservoir_use(t) * irr_profit(t) + pump_use(t) * (irr_profit(t) - 20)) - sum(src, capcost(src) * I(src));
  69   
  70  MODEL reservoir_management /all/;
  71   
  72  SOLVE reservoir_management USING MIP MAXIMIZING total_profit;


COMPILATION TIME     =        0.000 SECONDS      3 MB  47.6.0 c2de9d6d WEX-WEI
GAMS 47.6.0  c2de9d6d Sep 12, 2024          WEX-WEI x86 64bit/MS Windows - 10/21/24 21:18:41 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE reservoir_management Using MIP From line 72


---- damlimit  =L=  

damlimit..  I(low) + I(high) =L= 1 ; (LHS = 0)
     

---- water_balance  =E=  

water_balance(1)..  storage(1) + reservoir_use(1) + reservoir_release(1) =E= 600 ; (LHS = 0, INFES = 600 ****)
     
water_balance(2)..  - storage(1) + storage(2) + reservoir_use(2) + reservoir_release(2) =E= 200 ; (LHS = 0, INFES = 200 ****)
     

---- reservoir_capacity  =L=  

reservoir_capacity(1)..  storage(1) + reservoir_use(1) + reservoir_release(1) - 300*I(low) - 700*I(high) =L= 0 ; (LHS = 0)
     
reservoir_capacity(2)..  storage(2) + reservoir_use(2) + reservoir_release(2) - 300*I(low) - 700*I(high) =L= 0 ; (LHS = 0)
     

---- pump_capacity  =L=  

pump_capacity(1)..  pump_use(1) - 400.4*I(pump) =L= 0 ; (LHS = 0)
     
pump_capacity(2)..  pump_use(2) - 400.4*I(pump) =L= 0 ; (LHS = 0)
     

---- pump_limit  =L=  

pump_limit(1)..  - reservoir_release(1) + pump_use(1) =L= 364 ; (LHS = 0)
     
pump_limit(2)..  - reservoir_release(2) + pump_use(2) =L= 364 ; (LHS = 0)
     

---- profit  =E=  

profit..  - 300*reservoir_use(1) - 100*reservoir_use(2) - 280*pump_use(1) - 80*pump_use(2) + total_profit + 6000*I(low) + 10000*I(high) + 8000*I(pump) =E= 0 ; (LHS = 0)
     
GAMS 47.6.0  c2de9d6d Sep 12, 2024          WEX-WEI x86 64bit/MS Windows - 10/21/24 21:18:41 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE reservoir_management Using MIP From line 72


---- storage  

storage(1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       water_balance(1)
       -1       water_balance(2)
        1       reservoir_capacity(1)

storage(2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       water_balance(2)
        1       reservoir_capacity(2)


---- reservoir_use  

reservoir_use(1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       water_balance(1)
        1       reservoir_capacity(1)
     -300       profit

reservoir_use(2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       water_balance(2)
        1       reservoir_capacity(2)
     -100       profit


---- reservoir_release  

reservoir_release(1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       water_balance(1)
        1       reservoir_capacity(1)
       -1       pump_limit(1)

reservoir_release(2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       water_balance(2)
        1       reservoir_capacity(2)
       -1       pump_limit(2)


---- pump_use  

pump_use(1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       pump_capacity(1)
        1       pump_limit(1)
     -280       profit

pump_use(2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       pump_capacity(2)
        1       pump_limit(2)
      -80       profit


---- total_profit  

total_profit
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       profit


---- I  binary decision to build or do prject from source src (1=yes 0=no)

I(low)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       damlimit
     -300       reservoir_capacity(1)
     -300       reservoir_capacity(2)
     6000       profit

I(high)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       damlimit
     -700       reservoir_capacity(1)
     -700       reservoir_capacity(2)
    10000       profit

I(pump)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
     -400.4     pump_capacity(1)
     -400.4     pump_capacity(2)
     8000       profit

GAMS 47.6.0  c2de9d6d Sep 12, 2024          WEX-WEI x86 64bit/MS Windows - 10/21/24 21:18:41 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Range Statistics    SOLVE reservoir_management Using MIP From line 72


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 1.000E+00, 6.000E+02] - Zero values observed as well
Bound     [min, max] : [ 1.000E+00, 1.000E+00] - Zero values observed as well
Matrix    [min, max] : [ 1.000E+00, 1.000E+04]

GAMS 47.6.0  c2de9d6d Sep 12, 2024          WEX-WEI x86 64bit/MS Windows - 10/21/24 21:18:41 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE reservoir_management Using MIP From line 72


MODEL STATISTICS

BLOCKS OF EQUATIONS           6     SINGLE EQUATIONS           10
BLOCKS OF VARIABLES           6     SINGLE VARIABLES           12
NON ZERO ELEMENTS            35     DISCRETE VARIABLES          3


GENERATION TIME      =        0.000 SECONDS      4 MB  47.6.0 c2de9d6d WEX-WEI
GAMS 47.6.0  c2de9d6d Sep 12, 2024          WEX-WEI x86 64bit/MS Windows - 10/21/24 21:18:41 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE reservoir_management Using MIP From line 72


               S O L V E      S U M M A R Y

     MODEL   reservoir_management   OBJECTIVE  total_profit
     TYPE    MIP                    DIRECTION  MAXIMIZE
     SOLVER  CPLEX                  FROM LINE  72

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      1 Optimal
**** OBJECTIVE VALUE           313040.0000

 RESOURCE USAGE, LIMIT          0.016 10000000000.000
 ITERATION COUNT, LIMIT         6    2147483647
*** This solver runs with a community license.
--- GMO setup time: 0.00s
--- GMO memory 0.50 Mb (peak 0.50 Mb)
--- Dictionary memory 0.00 Mb
--- Cplex 22.1.1.0 link memory 0.00 Mb (peak 0.00 Mb)
--- Starting Cplex


--- MIP status (101): integer optimal solution.
--- Cplex Time: 0.02sec (det. 0.07 ticks)

--- Returning a primal only solution to GAMS (marginals all set to NA).
--- Fixing integer variables and solving final LP...


--- Fixed MIP status (1): optimal.
--- Cplex Time: 0.00sec (det. 0.02 ticks)


Proven optimal solution
MIP Solution:       313040.000000    (6 iterations, 0 nodes)
Final Solve:        313040.000000    (3 iterations)

Best possible:      313040.000000
Absolute gap:            0.000000
Relative gap:            0.000000


                           LOWER          LEVEL          UPPER         MARGINAL

---- EQU damlimit          -INF            1.0000         1.0000          .          

---- EQU water_balance  

         LOWER          LEVEL          UPPER         MARGINAL

1       600.0000       600.0000       600.0000       300.0000      
2       200.0000       200.0000       200.0000       100.0000      

---- EQU reservoir_capacity  

         LOWER          LEVEL          UPPER         MARGINAL

1        -INF         -100.0000          .              .          
2        -INF         -500.0000          .              .          

---- EQU pump_capacity  

         LOWER          LEVEL          UPPER         MARGINAL

1        -INF          -36.4000          .              .          
2        -INF          -36.4000          .              .          

---- EQU pump_limit  

         LOWER          LEVEL          UPPER         MARGINAL

1        -INF          364.0000       364.0000       280.0000      
2        -INF          364.0000       364.0000        80.0000      

                           LOWER          LEVEL          UPPER         MARGINAL

---- EQU profit              .              .              .             1.0000      

---- VAR storage  

         LOWER          LEVEL          UPPER         MARGINAL

1          .              .            +INF         -200.0000      
2          .              .            +INF         -100.0000      

---- VAR reservoir_use  

         LOWER          LEVEL          UPPER         MARGINAL

1          .           600.0000        +INF             .          
2          .           200.0000        +INF             .          

---- VAR reservoir_release  

         LOWER          LEVEL          UPPER         MARGINAL

1          .              .            +INF          -20.0000      
2          .              .            +INF          -20.0000      

---- VAR pump_use  

         LOWER          LEVEL          UPPER         MARGINAL

1          .           364.0000        +INF             .          
2          .           364.0000        +INF             .          

                           LOWER          LEVEL          UPPER         MARGINAL

---- VAR total_pro~        -INF       313040.0000        +INF             .          

---- VAR I  binary decision to build or do prject from source src (1=yes 0=no)

            LOWER          LEVEL          UPPER         MARGINAL

low           .              .             1.0000     -6000.0000      
high          .             1.0000         1.0000    -10000.0000      
pump          .             1.0000         1.0000     -8000.0000      


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED


EXECUTION TIME       =        0.062 SECONDS      4 MB  47.6.0 c2de9d6d WEX-WEI


USER: CEE 6410 Water Resources Systems Analysis      G240923|0002AO-GEN
      Utah State University, Utah Water Research Laboratory     DCE3763
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      C:\Users\fugal\OneDrive\Documents\GitHub\CEE-6410-Fugal\homework 6 MIP (1).gms
Output     C:\Users\fugal\OneDrive\Documents\GitHub\CEE-6410-Fugal\homework 6 MIP (1).lst
